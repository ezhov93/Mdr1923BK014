#pragma once

#include "Global.h"

typedef struct {
  __IO uint32_t KEY;
  __IO uint32_t MAX_CLK;
  __IO uint32_t CPU_CLK;
  __IO uint32_t PER0_CLK;
  __IO uint32_t PER1_CLK;
  __IO uint32_t CPU_CHK0;
  __IO uint32_t CPU_CHK1;
  __IO uint32_t CPU_CHK2;
  __IO uint32_t CPU_STAT;
  __IO uint32_t LSI_CLK;
  __IO uint32_t LSI_CHK0;
  __IO uint32_t LSI_CHK1;
  __IO uint32_t LSI_CHK2;
  __IO uint32_t LSI_STAT;
  __IO uint32_t HSI_STAT;
  __IO uint32_t LSE_CLK;
  __IO uint32_t LSE_CHK0;
  __IO uint32_t LSE_CHK1;
  __IO uint32_t LSE_CHK2;
  __IO uint32_t LSE_STAT;
  __IO uint32_t HSE0_CLK;
  __IO uint32_t HSE0_CHK0;
  __IO uint32_t HSE0_CHK1;
  __IO uint32_t HSE0_CHK2;
  __IO uint32_t HSE0_STAT;
  __IO uint32_t HSE1_CLK;
  __IO uint32_t HSE1_CHK0;
  __IO uint32_t HSE1_CHK1;
  __IO uint32_t HSE1_CHK2;
  __IO uint32_t HSE1_STAT;
  __IO uint32_t PLL0_CLK;
  __IO uint32_t PLL0_CHK0;
  __IO uint32_t PLL0_CHK1;
  __IO uint32_t PLL0_CHK2;
  __IO uint32_t PLL0_STAT;
  __IO uint32_t PLL1_CLK;
  __IO uint32_t PLL1_CHK0;
  __IO uint32_t PLL1_CHK1;
  __IO uint32_t PLL1_CHK2;
  __IO uint32_t PLL1_STAT;
  __IO uint32_t PLL2_CLK;
  __IO uint32_t PLL2_CHK0;
  __IO uint32_t PLL2_CHK1;
  __IO uint32_t PLL2_CHK2;
  __IO uint32_t PLL2_STAT;
  __IO uint32_t PLL3_CLK;
  __IO uint32_t PLL3_CHK0;
  __IO uint32_t PLL3_CHK1;
  __IO uint32_t PLL3_CHK2;
  __IO uint32_t PLL3_STAT;
  __IO uint32_t PLL4_CLK;
  __IO uint32_t PLL4_CHK0;
  __IO uint32_t PLL4_CHK1;
  __IO uint32_t PLL4_CHK2;
  __IO uint32_t PLL4_STAT;
  __IO uint32_t PLL5_CLK;
  __IO uint32_t PLL5_CHK0;
  __IO uint32_t PLL5_CHK1;
  __IO uint32_t PLL5_CHK2;
  __IO uint32_t PLL5_STAT;
  __IO uint32_t PLL6_CLK;
  __IO uint32_t PLL6_CHK0;
  __IO uint32_t PLL6_CHK1;
  __IO uint32_t PLL6_CHK2;
  __IO uint32_t PLL6_STAT;
  __IO uint32_t PLL7_CLK;
  __IO uint32_t PLL7_CHK0;
  __IO uint32_t PLL7_CHK1;
  __IO uint32_t PLL7_CHK2;
  __IO uint32_t PLL7_STAT;
  __IO uint32_t CAN0_CLK;
  __IO uint32_t CAN1_CLK;
  __IO uint32_t CAN2_CLK;
  __IO uint32_t CAN3_CLK;
  __IO uint32_t CAN4_CLK;
  __IO uint32_t CAN5_CLK;
  __IO uint32_t TIM0_CLK;
  __IO uint32_t TIM1_CLK;
  __IO uint32_t TIM2_CLK;
  __IO uint32_t TIM3_CLK;
  __IO uint32_t TIM4_CLK;
  __IO uint32_t TIM5_CLK;
  __IO uint32_t MIL0_CLK;
  __IO uint32_t MIL1_CLK;
  __IO uint32_t MIL2_CLK;
  __IO uint32_t MIL3_CLK;
  __IO uint32_t ARC0_CLK;
  __IO uint32_t ARC1_CLK;
  __IO uint32_t ARC2_CLK;
  __IO uint32_t ARC3_CLK;
  __IO uint32_t EMAC0_CLK;
  __IO uint32_t EMAC1_CLK;
  __IO uint32_t EPHY0_CLK;
  __IO uint32_t EPHY1_CLK;
  __IO uint32_t SPW0_CLK;
  __IO uint32_t SPW1_CLK;
  __IO uint32_t SPHY0_CLK;
  __IO uint32_t SPHY1_CLK;
  __IO uint32_t UART0_CLK;
  __IO uint32_t UART1_CLK;
  __IO uint32_t UART2_CLK;
  __IO uint32_t UART3_CLK;
  __IO uint32_t UART4_CLK;
  __IO uint32_t UART5_CLK;
  __IO uint32_t SSP0_CLK;
  __IO uint32_t SSP1_CLK;
  __IO uint32_t SSP2_CLK;
  __IO uint32_t SSP3_CLK;
  __IO uint32_t SSP4_CLK;
  __IO uint32_t SSP5_CLK;
  __IO uint32_t USB_CLK;
  __IO uint32_t ADC0_CLK;
  __IO uint32_t ADC1_CLK;
  __IO uint32_t DAC0_CLK;
  __IO uint32_t DAC1_CLK;
  __IO uint32_t RTC_CLK;
} CLKControl;

namespace Private {
[[maybe_unused]] static CLKControl clkCntr = {};
}  // namespace Private

const uint CLK_CNTR_BASE = reinterpret_cast<uint>(&Private::clkCntr);
[[maybe_unused]] static CLKControl* CLK_CNTR = &Private::clkCntr;
