#pragma once

#include "1923VK014.h"
#include "Register.h"

typedef struct {
  Register KEY;
  Register MAX_CLK;
  Register CPU_CLK;
  Register PER0_CLK;
  Register PER1_CLK;
  Register CPU_CHK0;
  Register CPU_CHK1;
  Register CPU_CHK2;
  Register CPU_STAT;
  Register LSI_CLK;
  Register LSI_CHK0;
  Register LSI_CHK1;
  Register LSI_CHK2;
  Register LSI_STAT;
  Register HSI_STAT;
  Register LSE_CLK;
  Register LSE_CHK0;
  Register LSE_CHK1;
  Register LSE_CHK2;
  Register LSE_STAT;
  Register HSE0_CLK;
  Register HSE0_CHK0;
  Register HSE0_CHK1;
  Register HSE0_CHK2;
  Register HSE0_STAT;
  Register HSE1_CLK;
  Register HSE1_CHK0;
  Register HSE1_CHK1;
  Register HSE1_CHK2;
  Register HSE1_STAT;
  Register PLL0_CLK;
  Register PLL0_CHK0;
  Register PLL0_CHK1;
  Register PLL0_CHK2;
  Register PLL0_STAT;
  Register PLL1_CLK;
  Register PLL1_CHK0;
  Register PLL1_CHK1;
  Register PLL1_CHK2;
  Register PLL1_STAT;
  Register PLL2_CLK;
  Register PLL2_CHK0;
  Register PLL2_CHK1;
  Register PLL2_CHK2;
  Register PLL2_STAT;
  Register PLL3_CLK;
  Register PLL3_CHK0;
  Register PLL3_CHK1;
  Register PLL3_CHK2;
  Register PLL3_STAT;
  Register PLL4_CLK;
  Register PLL4_CHK0;
  Register PLL4_CHK1;
  Register PLL4_CHK2;
  Register PLL4_STAT;
  Register PLL5_CLK;
  Register PLL5_CHK0;
  Register PLL5_CHK1;
  Register PLL5_CHK2;
  Register PLL5_STAT;
  Register PLL6_CLK;
  Register PLL6_CHK0;
  Register PLL6_CHK1;
  Register PLL6_CHK2;
  Register PLL6_STAT;
  Register PLL7_CLK;
  Register PLL7_CHK0;
  Register PLL7_CHK1;
  Register PLL7_CHK2;
  Register PLL7_STAT;
  Register CAN0_CLK;
  Register CAN1_CLK;
  Register CAN2_CLK;
  Register CAN3_CLK;
  Register CAN4_CLK;
  Register CAN5_CLK;
  Register TIM0_CLK;
  Register TIM1_CLK;
  Register TIM2_CLK;
  Register TIM3_CLK;
  Register TIM4_CLK;
  Register TIM5_CLK;
  Register MIL0_CLK;
  Register MIL1_CLK;
  Register MIL2_CLK;
  Register MIL3_CLK;
  Register ARC0_CLK;
  Register ARC1_CLK;
  Register ARC2_CLK;
  Register ARC3_CLK;
  Register EMAC0_CLK;
  Register EMAC1_CLK;
  Register EPHY0_CLK;
  Register EPHY1_CLK;
  Register SPW0_CLK;
  Register SPW1_CLK;
  Register SPHY0_CLK;
  Register SPHY1_CLK;
  Register UART0_CLK;
  Register UART1_CLK;
  Register UART2_CLK;
  Register UART3_CLK;
  Register UART4_CLK;
  Register UART5_CLK;
  Register SSP0_CLK;
  Register SSP1_CLK;
  Register SSP2_CLK;
  Register SSP3_CLK;
  Register SSP4_CLK;
  Register SSP5_CLK;
  Register USB_CLK;
  Register ADC0_CLK;
  Register ADC1_CLK;
  Register DAC0_CLK;
  Register DAC1_CLK;
  Register RTC_CLK;
} CLKControl;

namespace Private {
[[maybe_unused]] static CLKControl clkCntr;
}  // namespace Private

const uint32_t CLK_CNTR_BASE = reinterpret_cast<uint32_t>(&Private::clkCntr);
[[maybe_unused]] static CLKControl* CLK_CNTR = &Private::clkCntr;
